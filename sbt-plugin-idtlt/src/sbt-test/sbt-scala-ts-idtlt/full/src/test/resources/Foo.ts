// Generated by ScalaTS 0.5.6: https://scala-ts.github.io/scala-ts/
import * as idtlt from 'idonttrustlikethat';

import * as nsTransport from './Transport';

// Validator for InterfaceDeclaration Foo
export const idtltFoo = idtlt.object({
  rates: idtlt.dictionary(idtlt.string, idtlt.number.optional()),
  score: idtlt.union(idtlt.number, idtlt.string),
  row: idtlt.tuple(idtlt.string, nsTransport.idtltTransport, idtlt.isoDate),
  namesp: idtlt.tuple(idtlt.number, idtlt.string),
  id: idtlt.number,
});

// Deriving TypeScript type from Foo validator
export type Foo = typeof idtltFoo.T;

export const idtltDiscriminatedFoo = idtlt.intersection(
  idtltFoo,
  idtlt.object({
    _type: idtlt.literal('Foo')
  })
);

// Deriving TypeScript type from idtltDiscriminatedFoo validator
export type DiscriminatedFoo = typeof idtltDiscriminatedFoo.T;

export const discriminatedFoo: (_: Foo) => DiscriminatedFoo = (v: Foo) => ({ _type: 'Foo', ...v });
