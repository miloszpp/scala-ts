name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # TODO: Publish snapshot on master

  build_n_test:
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout repository'
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: 'Set up JDK 1.8'
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: 'Coursier cache'
      uses: coursier/cache-action@v5

    - name: 'SBT cache'
      uses: actions/cache@v1
      with:
        path: $HOME/.sbt
        key: ${{ runner.os }}-sbt-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

    - name: 'Check code quality'
      run: |
        sbt ';warn ;scalafixAll -check ;scalariformFormat ;test:scalariformFormat'
        
        git diff --exit-code || (
          echo "ERROR: Scalariform check failed, see differences above."
          echo "To fix, format your sources using ./build scalariformFormat test:scalariformFormat before submitting a pull request."
          echo "Additionally, please squash your commits (eg, use git commit --amend) if you're going to update this pull request."
          false
        )
        
        sbt scapegoat

    - name: 'Run core tests'
      run: sbt +core/testOnly

    - name: 'Run SBT plugin tests'
      run: sbt ';error ;^ publishLocal ;^ scripted'

    - name: 'Set up Node'
      uses: actions/setup-node@v1
      with:
        node-version: '12'

    - name: 'Compile generated TypeScript from SBT scripted tests'
      run: |
        cp sbt-plugin/src/node/*.* /tmp/scala-ts-sbt/
        cd /tmp/scala-ts-sbt/
        find . -type f -name '*.ts' -print
        npm ci
        npm run build
        
    - name: 'Publish snapshot (master)'
      if: ${{ github.ref == 'refs/heads/master' }}
      env:
        PUBLISH_REPO_ID: "oss.sonatype.org"
        PUBLISH_REPO_URL: "https://oss.sonatype.org/content/repositories/snapshots"
        PUBLISH_REPO_NAME: "Sonatype Nexus Repository Manager"
        PUBLISH_USER: ${{ secrets.SONATYPE_USER }}
        PUBLISH_PASS: ${{ secrets.SONATYPE_PASSWORD }}
      run: sbt ';error ;+core/publish ;^sbt-plugin/publish'
